void get_next(char *a,int len){
	int k=0,i=1;
	next[0]=len;
	while(k<len && a[k] == a[k+1])++k;
	next[1]=k;
	k=1;
	while(++i<len){
		int maxr=k+next[k]-1;
		next[i]=min(next[i-k],max(maxr-i+1,0));
		while(i+next[i]<len && a[next[i]] == a[i+next[i]])++next[i];
		if(i+next[i]>k+next[k])k=i;
	}
}
 
void EKMP(char *a,char *b){
	int lena=strlen(a),lenb=strlen(b),k=0,i=0;
	get_next(a,lena);
	b[lenb]='*';//b[lenb]重置为a,b里没出现的字符 
	while(a[k] == b[k])++k;//如果没有重置b[lenb],应为k<lenb && a[k] == b[k] 
	extend[0]=k;
	k=0;
	while(++i<lenb){
		int maxr=k+extend[k]-1;
		extend[i]=min(next[i-k],max(maxr-i+1,0));
		while(a[extend[i]] == b[i+extend[i]])++extend[i];//如果没有重置b[lenb],需判断i+extend[i]<lenb
		if(i+extend[i]>k+extend[k])k=i;
	}
}