#include<stdio.h>
#include<iostream>
#include<string.h>
using namespace std;
typedef long long ll;
const int N=5e3+3;

int head[N],head2[N],cnt;
int indegree[N];

struct node{
    int v,nxt;
}edge[N<<2],edge2[N<<2];


void addedge(int u,int v){
    edge[++cnt].v=v;
    edge[cnt].nxt=head[u];
    head[u]=cnt;
}

void addedge2(int u,int v){
    edge2[++cnt].v=v;
    edge2[cnt].nxt=head2[u];
    head2[u]=cnt;
}

int dfn[N],low[N],st[N],bcc[N],top,tt,bccid;
bool vis[N<<1];

void tarjan(int u){
    if(dfn[u])return;
    low[u]=dfn[u]=++tt;
    st[++top]=u;
    for(int i=head[u];~i;i=edge[i].nxt){
        int v=edge[i].v;
        if(vis[i])continue;
        vis[i]=vis[i^1]=true;
        if(!dfn[v]){
            tarjan(v);
            low[u]=min(low[u],low[v]);
            /*if(dfn[u]<low[v]){u-vÎªÇÅ
            }*/
        }
        else{
            low[u]=min(low[u],dfn[v]);
        }
    }
    if(dfn[u]==low[u]){
        bccid++;
        while(top){
            int now=st[top--];
            bcc[now]=bccid;
            if(now==u)break;
        }
    }
}

int main(){
    int n,m;
    scanf("%d%d",&n,&m);
    memset(head,-1,sizeof(head));
    cnt=-1;
    for(int i=1;i<=m;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        addedge(x,y);
        addedge(y,x);
    }
    for(int i=1;i<=n;i++){
        tarjan(i);
    }
    //for(int i=1;i<=n;i++)printf("%d\n",bcc[i]);
    memset(head2,-1,sizeof(head2));
    cnt=-1;
    for(int i=1;i<=n;i++){
        for(int j=head[i];~j;j=edge[j].nxt){
            int v=edge[j].v;
            if(bcc[i]==bcc[v])continue;
            addedge2(bcc[i],bcc[v]);
            addedge2(bcc[v],bcc[i]);
            //printf("%d %d\n",scc[i],scc[v]);
            indegree[bcc[v]]++;
            indegree[bcc[i]]++;
        }
    }
    int ans=0;
    for(int i=1;i<=bccid;i++){
        if(indegree[i]==2){
            ans++;
        }
    }
    printf("%d\n",(ans+1)/2);
    return 0;
}