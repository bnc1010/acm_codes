int ff[N],dep[N];
int f[N][18];


void dfs(int u,int fa){
    ff[u]=fa;
    dep[u]=dep[fa]+1;
    f[u][0]=fa;
    for(int i=1;i<18;i++)f[u][i]=f[f[u][i-1]][i-1];
¡£¡£¡£
    for(int i=head[u];~i;i=edge[i].nxt){
        int v=edge[i].v;
        if(v==fa)continue;
        dfs(v,u);
    }
}

int lca(int a,int b)
{
    if(dep[a]>dep[b])swap(a,b);
    if(dep[a]<dep[b])
    {
        int del=dep[b]-dep[a];
        for(int i=0;i<18;i++)
            if(del&(1<<i))b=f[b][i];
    }
    if(a==b)return a;
    for(int i=17;i>=0;i--)
    {
        if(f[a][i]!=f[b][i])
        {
            a=f[a][i],b=f[b][i];
        }
    }
    return f[a][0];
}